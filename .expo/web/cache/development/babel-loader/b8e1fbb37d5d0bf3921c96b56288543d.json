{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\New  Leaders Tech\\\\Desktop\\\\DWALLET\\\\dwallet-project\\\\client\\\\app\\\\components\\\\CartView.js\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Axios from 'axios';\nimport { useNavigation } from '@react-navigation/native';\nimport Icon from \"@expo/vector-icons/MaterialIcons\";\n\nfunction CartView(_ref) {\n  var _this = this;\n\n  var userdata = _ref.userdata,\n      setCountCartedItem = _ref.setCountCartedItem;\n  var userid = userdata.id;\n  var navigation = useNavigation();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      cartedproduct = _useState2[0],\n      setCartedProduct = _useState2[1];\n\n  var _useState3 = useState(styles.check),\n      _useState4 = _slicedToArray(_useState3, 2),\n      activebtn = _useState4[0],\n      setActiveBtn = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      deleteclicked = _useState6[0],\n      setDeleteClicked = _useState6[1];\n\n  useEffect(function () {\n    var unsubscribe = navigation.addListener('focus', function () {\n      Deleteitem();\n    });\n    return unsubscribe;\n  }, [navigation, 1]);\n  useEffect(function () {\n    if (deleteclicked === true) {\n      console.log(\"'this is me,clicked\");\n      Deleteitem();\n    }\n\n    setDeleteClicked(false);\n  }, [deleteclicked, cartedproduct, setCountCartedItem]);\n\n  var Deleteitem = function Deleteitem() {\n    try {\n      Axios.get(\"http://192.168.254.102:8000/api/get/cartitems/\" + userid).then(function (response) {\n        setCartedProduct(response.data);\n        setCountCartedItem(response.data.length);\n      });\n    } catch (error) {\n      Alert.alert('Failed to get product');\n    }\n  };\n\n  if (cartedproduct.length < 1) {\n    return React.createElement(React.Fragment, null, React.createElement(Emptycart, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  function Emptycart() {\n    return React.createElement(View, {\n      style: styles.emptycartcontainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: styles.emptycart,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, \"No Items in Cart\"), React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        navigation.reset({\n          index: 0,\n          routes: [{\n            name: 'Shop'\n          }]\n        });\n      },\n      style: styles.shopnowbtn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, React.createElement(Image, {\n      source: require(\"../assets/shop.png\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    })));\n  }\n\n  var handledeletecartitem = function handledeletecartitem(cartid) {\n    try {\n      Axios.delete(\"http://192.168.254.102:8000/api/delete/cartitems/\" + cartid + \"/\" + userid).then(function (response) {\n        console.log(response.data.message);\n        setDeleteClicked(true);\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  var handlePlaceOrder = function handlePlaceOrder() {\n    navigation.navigate(\"CheckOutScreen\");\n  };\n\n  var handleviewdetails = function handleviewdetails(pid, pname, pdesc, pprice, pimage) {\n    var pdata = {\n      'pid': pid,\n      'pname': pname,\n      'pdesc': pdesc,\n      'pprice': pprice,\n      'pimage': pimage\n    };\n    navigation.navigate({\n      name: 'ProductDetailScreen',\n      params: {\n        userdata: userdata,\n        pdata: pdata\n      },\n      merge: true\n    });\n  };\n\n  var handlecheckbox = function handlecheckbox(indexval) {\n    console.log(\"clicked in the checkbox\");\n    console.log(indexval);\n\n    if (activebtn.backgroundColor == \"green\") {\n      setActiveBtn(styles.check);\n    }\n\n    if (activebtn.backgroundColor == \"white\") {\n      setActiveBtn(styles.checkbtn);\n    }\n  };\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }, React.createElement(React.Fragment, null, cartedproduct.map(function (val, index) {\n    return React.createElement(View, {\n      style: styles.maincard,\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 29\n      }\n    }, React.createElement(View, {\n      style: styles.itemdetail,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 33\n      }\n    }, React.createElement(View, {\n      style: styles.checkboxitem,\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 37\n      }\n    }, React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return handlecheckbox(index);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 41\n      }\n    }, React.createElement(View, {\n      style: activebtn,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 45\n      }\n    })), React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return handleviewdetails(val.productid, val.productname, val.productdesc, val.productprice, val.productimage);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 41\n      }\n    }, React.createElement(Image, {\n      resizeMode: \"cover\",\n      source: {\n        uri: val.productimage\n      },\n      style: styles.imageview,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 45\n      }\n    }))), React.createElement(View, {\n      style: styles.titletext,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 37\n      }\n    }, React.createElement(View, {\n      style: styles.namecol,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 41\n      }\n    }, React.createElement(View, {\n      style: styles.name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 45\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 49\n      }\n    }, \"name: \", val.productname, \" \"))), React.createElement(View, {\n      style: styles.deleteandprice,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 41\n      }\n    }, React.createElement(View, {\n      style: styles.priceTag,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 45\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 49\n      }\n    }, \"Price: \", val.productprice, \" \")), React.createElement(View, {\n      style: styles.btndelete,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 45\n      }\n    }, React.createElement(TouchableOpacity, {\n      style: {\n        backgroundColor: \"white\",\n        borderRadius: 10,\n        alignItems: \"center\",\n        width: \"55%\"\n      },\n      onPress: function onPress() {\n        return handledeletecartitem(val.cartid);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 49\n      }\n    }, React.createElement(Icon, {\n      name: \"delete\",\n      size: 32,\n      style: {\n        color: \"#d46071\"\n      },\n      onPress: function onPress() {\n        return handledeletecartitem(val.cartid);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 53\n      }\n    })))), React.createElement(View, {\n      style: styles.desctext,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 41\n      }\n    }, React.createElement(Text, {\n      style: {\n        overflow: \"hidden\",\n        maxHeight: \"20%\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 45\n      }\n    }, \"Desc: \", val.productdesc, \" \")))));\n  })));\n}\n\nvar styles = StyleSheet.create({\n  maincard: {\n    flex: 1,\n    flexDirection: 'column',\n    alignItems: \"center\",\n    marginTop: 5\n  },\n  CartViewbox: {},\n  itemdetail: {\n    backgroundColor: \"#eee\",\n    borderRadius: 10,\n    flexDirection: \"row\"\n  },\n  titletext: {\n    width: \"75%\",\n    backgroundColor: \"#F1F1F1\",\n    paddingLeft: 8\n  },\n  desctext: {\n    paddingTop: 1\n  },\n  imageview: {\n    height: 80,\n    width: 250,\n    borderRadius: 10\n  },\n  checkboxitem: {\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  check: {\n    padding: 5,\n    margin: 10,\n    width: 30,\n    height: 30,\n    backgroundColor: \"white\",\n    borderRadius: 5,\n    borderWidth: 4,\n    borderColor: \"green\"\n  },\n  checkbtn: {\n    padding: 5,\n    margin: 10,\n    width: 30,\n    height: 30,\n    backgroundColor: \"green\",\n    borderRadius: 5,\n    borderWidth: 4,\n    borderColor: \"green\"\n  },\n  emptycart: {\n    marginTop: 45,\n    textAlign: 'center',\n    fontSize: 40\n  },\n  shopnowbtn: {\n    marginTop: \"20%\"\n  },\n  emptycartcontainer: {\n    borderRadius: 50,\n    marginTop: \"5%\",\n    backgroundColor: \"#035A85\"\n  },\n  priceTag: {\n    backgroundColor: \"#00B761\",\n    width: 120,\n    height: 30,\n    justifyContent: 'space-around',\n    borderBottomLeftRadius: 10,\n    borderTopRightRadius: 20\n  },\n  btndelete: {\n    paddingTop: 2,\n    width: 70,\n    marginLeft: \"35%\"\n  },\n  namecol: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  deleteandprice: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: \"space-between\"\n  }\n});\nexport default CartView;","map":{"version":3,"sources":["C:/Users/New  Leaders Tech/Desktop/DWALLET/dwallet-project/client/app/components/CartView.js"],"names":["React","useEffect","useState","Axios","useNavigation","Icon","CartView","userdata","setCountCartedItem","userid","id","navigation","cartedproduct","setCartedProduct","styles","check","activebtn","setActiveBtn","deleteclicked","setDeleteClicked","unsubscribe","addListener","Deleteitem","console","log","get","then","response","data","length","error","Alert","alert","Emptycart","emptycartcontainer","emptycart","reset","index","routes","name","shopnowbtn","require","handledeletecartitem","cartid","delete","message","err","handlePlaceOrder","navigate","handleviewdetails","pid","pname","pdesc","pprice","pimage","pdata","params","merge","handlecheckbox","indexval","backgroundColor","checkbtn","map","val","maincard","itemdetail","checkboxitem","productid","productname","productdesc","productprice","productimage","uri","imageview","titletext","namecol","deleteandprice","priceTag","btndelete","borderRadius","alignItems","width","color","desctext","overflow","maxHeight","StyleSheet","create","flex","flexDirection","marginTop","CartViewbox","paddingLeft","paddingTop","height","padding","margin","borderWidth","borderColor","textAlign","fontSize","justifyContent","borderBottomLeftRadius","borderTopRightRadius","marginLeft"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { StyleSheet, Text, View, Button, TouchableOpacity, Image, Alert } from 'react-native';\r\nimport Axios from 'axios';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport Icon from 'react-native-vector-icons/MaterialIcons';\r\n\r\n\r\nfunction CartView({ userdata, setCountCartedItem }) {\r\n    const userid = userdata.id\r\n    const navigation = useNavigation();\r\n    const [cartedproduct, setCartedProduct] = useState([]);\r\n    const [activebtn, setActiveBtn] = useState(styles.check)\r\n    const [deleteclicked, setDeleteClicked] = useState(false)\r\n\r\n    //useeffect call is made here with navigation focus addlisterner to refresh everyting it focus the cart screen.ok buddy\r\n    useEffect(() => {\r\n        const unsubscribe = navigation.addListener('focus', () => {\r\n            // do something\r\n            Deleteitem()\r\n        }\r\n        );\r\n\r\n        return unsubscribe;\r\n    }, [navigation, 1]);\r\n\r\n    //if user like to\r\n    useEffect(() => {\r\n        if (deleteclicked === true) {\r\n            console.log(\"'this is me,clicked\")\r\n            // Alert.alert('Failed to get product')\r\n            Deleteitem()\r\n\r\n        }\r\n        setDeleteClicked(false)\r\n\r\n    }, [deleteclicked, cartedproduct, setCountCartedItem])\r\n\r\n\r\n\r\n    const Deleteitem = () => {\r\n\r\n        try {\r\n            Axios.get(`http://192.168.254.102:8000/api/get/cartitems/${userid}`)\r\n                .then((response) => {\r\n\r\n                    setCartedProduct(response.data)\r\n                    // setproductdata(response.data)\r\n                    setCountCartedItem(response.data.length)\r\n                })\r\n        }\r\n        catch (error) {\r\n            Alert.alert('Failed to get product')\r\n        }\r\n    }\r\n\r\n    //main program before rendering components\\\r\n    if (cartedproduct.length < 1) {\r\n        return (\r\n            <>\r\n                <Emptycart />\r\n            </>\r\n        )\r\n    }\r\n\r\n    // else it will run the default function returns\r\n\r\n    //if no item in cart\r\n    function Emptycart() {\r\n        return (\r\n            <View style={styles.emptycartcontainer}>\r\n                <Text style={styles.emptycart}>No Items in Cart</Text>\r\n                <TouchableOpacity\r\n                    onPress={() => {\r\n                        navigation.reset({\r\n                            index: 0,\r\n                            routes: [{ name: 'Shop' }],\r\n                        });\r\n                    }}\r\n                    style={styles.shopnowbtn}>\r\n                    <Image\r\n                        source={require(\"../assets/shop.png\")}\r\n                    />\r\n                </TouchableOpacity>\r\n\r\n            </View>\r\n        )\r\n\r\n    }\r\n\r\n    //if there is carted item in cart\r\n    // function CartedItem() {\r\n\r\n\r\n    //delete item from cart here\r\n    const handledeletecartitem = (cartid) => {\r\n        // DeleteCartItem(cartid, userid)\r\n\r\n        try {\r\n            Axios.delete(`http://192.168.254.102:8000/api/delete/cartitems/${cartid}/${userid}`)\r\n                .then((response) => {\r\n                    //on delete success ,there is message in need\r\n                    console.log(response.data.message)\r\n                    setDeleteClicked(true)\r\n                    // navigation.reset({\r\n                    //     index: 0,\r\n                    //     routes: [{ name: \"Cart\" }],\r\n\r\n                    // })\r\n\r\n                })\r\n\r\n\r\n        }\r\n        catch (err) {\r\n            console.log(err)\r\n        }\r\n\r\n    }\r\n\r\n    const handlePlaceOrder = () => {\r\n        navigation.navigate(\"CheckOutScreen\")\r\n\r\n    }\r\n\r\n\r\n    const handleviewdetails = (pid, pname, pdesc, pprice, pimage) => {\r\n        // HandleViewDetails(val.productid, val.productname, val.productdesc, val.productprice, val.productimage)\r\n        const pdata = { 'pid': pid, 'pname': pname, 'pdesc': pdesc, 'pprice': pprice, 'pimage': pimage }\r\n        navigation.navigate({\r\n            name: 'ProductDetailScreen',\r\n            params: { userdata: userdata, pdata: pdata },\r\n            merge: true,\r\n        })\r\n    }\r\n\r\n\r\n    const handlecheckbox = (indexval) => {\r\n        console.log(\"clicked in the checkbox\")\r\n        console.log(indexval)\r\n        // setActiveBtn(styles.checkbtn)\r\n        if (activebtn.backgroundColor == \"green\") {\r\n            setActiveBtn(styles.check)\r\n        }\r\n        if (activebtn.backgroundColor == \"white\") {\r\n\r\n            setActiveBtn(styles.checkbtn)\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n\r\n        <View>\r\n            <>\r\n\r\n                {\r\n                    cartedproduct.map((val, index) => {\r\n\r\n                        return (\r\n                            <View style={styles.maincard} key={index} >\r\n\r\n\r\n                                <View style={styles.itemdetail}>\r\n                                    <View style={styles.checkboxitem} key={index}>\r\n                                        <TouchableOpacity\r\n                                            onPress={() => handlecheckbox(index)}\r\n                                        >\r\n                                            <View style={activebtn} >\r\n\r\n\r\n                                            </View>\r\n                                        </TouchableOpacity>\r\n\r\n                                        {/* <CheckBox\r\n\r\n                                                    value={isSelected}\r\n                                                    onValueChange={setSelection}\r\n                                                    style={styles.checkbox}\r\n\r\n                                                /> */}\r\n                                        <TouchableOpacity\r\n                                            onPress={() => handleviewdetails(val.productid, val.productname, val.productdesc, val.productprice, val.productimage)}>\r\n\r\n                                            <Image\r\n                                                resizeMode=\"cover\"\r\n                                                source={{ uri: (val.productimage) }}\r\n                                                style={styles.imageview}\r\n                                            />\r\n                                        </TouchableOpacity>\r\n                                    </View>\r\n\r\n\r\n                                    <View style={styles.titletext}>\r\n                                        <View style={styles.namecol}>\r\n                                            <View\r\n                                                style={styles.name}>\r\n                                                <Text>name: {val.productname} </Text>\r\n                                            </View>\r\n\r\n                                        </View>\r\n                                        <View style={styles.deleteandprice}>\r\n                                            <View\r\n                                                style={styles.priceTag}>\r\n                                                <Text>Price: {val.productprice} </Text>\r\n                                            </View>\r\n                                            <View\r\n                                                style={styles.btndelete}>\r\n                                                <TouchableOpacity\r\n                                                    style={{\r\n                                                        backgroundColor: \"white\",\r\n                                                        borderRadius: 10,\r\n                                                        alignItems: \"center\",\r\n                                                        width: \"55%\",\r\n\r\n\r\n                                                    }}\r\n                                                    onPress={() => handledeletecartitem(val.cartid)}>\r\n                                                    <Icon\r\n                                                        name=\"delete\"\r\n                                                        size={32}\r\n                                                        style={{ color: \"#d46071\" }}\r\n                                                        onPress={() => handledeletecartitem(val.cartid)} />\r\n                                                    {/* <Image\r\n                                                            style={{ resizeMode: \"contain\", }}\r\n                                                            source={require(\"../assets/deletebtn.png\")} /> */}\r\n                                                </TouchableOpacity>\r\n\r\n                                            </View>\r\n                                        </View>\r\n\r\n\r\n                                        <View\r\n                                            style={styles.desctext}>\r\n                                            <Text style={{\r\n                                                overflow: \"hidden\",\r\n                                                maxHeight: \"20%\",\r\n\r\n\r\n                                            }}>Desc: {val.productdesc} </Text>\r\n                                        </View>\r\n\r\n                                    </View>\r\n                                </View>\r\n                            </View>\r\n\r\n\r\n\r\n                        )\r\n\r\n                    }\r\n                    )\r\n\r\n\r\n                }\r\n\r\n\r\n            </>\r\n        </View>\r\n\r\n\r\n    );\r\n\r\n\r\n    ///////////////////////////////\r\n    // }\r\n\r\n}\r\nconst styles = StyleSheet.create({\r\n    maincard: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: \"center\",\r\n        marginTop: 5,\r\n    },\r\n    CartViewbox: {\r\n\r\n\r\n\r\n    },\r\n    itemdetail: {\r\n        backgroundColor: \"#eee\",\r\n        borderRadius: 10,\r\n        flexDirection: \"row\"\r\n\r\n\r\n    },\r\n    titletext: {\r\n        // height:\"50%\",\r\n        width: \"75%\",\r\n        backgroundColor: \"#F1F1F1\",\r\n        paddingLeft: 8,\r\n\r\n\r\n    },\r\n\r\n    desctext: {\r\n        paddingTop: 1,\r\n\r\n\r\n\r\n\r\n    },\r\n    imageview: {\r\n\r\n        height: 80,\r\n        width: 250,\r\n        borderRadius: 10\r\n\r\n    },\r\n    checkboxitem: {\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n\r\n\r\n    },\r\n    check: {\r\n        padding: 5,\r\n        margin: 10,\r\n        width: 30,\r\n        height: 30,\r\n        backgroundColor: \"white\",\r\n        borderRadius: 5,\r\n        borderWidth: 4,\r\n        borderColor: \"green\"\r\n    },\r\n    checkbtn: {\r\n        padding: 5,\r\n        margin: 10,\r\n        width: 30,\r\n        height: 30,\r\n        backgroundColor: \"green\",\r\n        borderRadius: 5,\r\n        borderWidth: 4,\r\n        borderColor: \"green\"\r\n    },\r\n\r\n    emptycart: {\r\n        marginTop: 45,\r\n        textAlign: 'center',\r\n        fontSize: 40\r\n\r\n    },\r\n    shopnowbtn: {\r\n        marginTop: \"20%\",\r\n\r\n    },\r\n    emptycartcontainer: {\r\n        borderRadius: 50,\r\n        marginTop: \"5%\",\r\n        backgroundColor: \"#035A85\",\r\n\r\n    },\r\n    priceTag: {\r\n        backgroundColor: \"#00B761\",\r\n        width: 120,\r\n        height: 30,\r\n        justifyContent: 'space-around',\r\n        borderBottomLeftRadius: 10,\r\n        borderTopRightRadius: 20,\r\n\r\n    },\r\n    btndelete: {\r\n        paddingTop: 2,\r\n        width: 70,\r\n        marginLeft: \"35%\",\r\n    },\r\n\r\n    namecol: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n\r\n\r\n    },\r\n    deleteandprice: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: \"space-between\"\r\n\r\n    }\r\n\r\n})\r\n\r\nexport default CartView;"]},"metadata":{},"sourceType":"module"}