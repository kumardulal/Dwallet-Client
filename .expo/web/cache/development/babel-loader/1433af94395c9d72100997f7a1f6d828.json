{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\New  Leaders Tech\\\\Desktop\\\\dwallet-project\\\\dwallet\\\\app\\\\components\\\\HomeScreenNav.js\";\nimport 'react-native-gesture-handler';\nimport * as React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport HomeTopTabsNav from \"../components/HomeTopTabsNav\";\nimport { Ionicons } from '@expo/vector-icons';\nimport WalletScreen from \"../screen/WalletScreen\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nvar Stack = createStackNavigator();\nvar Tab = createBottomTabNavigator();\n\nfunction NavWallet(_ref) {\n  var _this = this;\n\n  var userdata = _ref.userdata;\n  return React.createElement(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"WalletScreen\",\n    children: function children() {\n      return React.createElement(WalletScreen, {\n        userdata: userdata,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 33\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }));\n}\n\nfunction NavShop(_ref2) {\n  var userdata = _ref2.userdata;\n  console.log(\"i am navshop\", userdata);\n  return React.createElement(React.Fragment, null, React.createElement(HomeTopTabsNav, {\n    userdata: userdata,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }));\n}\n\nfunction HomeScreenNav(_ref3) {\n  var _route$params,\n      _this2 = this;\n\n  var route = _ref3.route;\n  var data = (_route$params = route.params) == null ? void 0 : _route$params.data;\n  return React.createElement(Tab.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"ShopStore\",\n    children: function children() {\n      return React.createElement(NavShop, {\n        userdata: data,\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 33\n        }\n      });\n    },\n    options: {\n      tabBarIcon: function tabBarIcon(_ref4) {\n        var color = _ref4.color,\n            size = _ref4.size;\n        return React.createElement(Ionicons, {\n          name: \"ios-home\",\n          color: color,\n          size: size,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"DWallet\",\n    children: function children() {\n      return React.createElement(NavWallet, {\n        userdata: data,\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 33\n        }\n      });\n    },\n    options: {\n      tabBarIcon: function tabBarIcon(_ref5) {\n        var color = _ref5.color,\n            size = _ref5.size;\n        return React.createElement(Ionicons, {\n          name: \"ios-wallet\",\n          size: size,\n          color: color,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }));\n}\n\nvar styles = StyleSheet.create({});\nexport default HomeScreenNav;","map":{"version":3,"sources":["C:/Users/New  Leaders Tech/Desktop/dwallet-project/dwallet/app/components/HomeScreenNav.js"],"names":["React","createStackNavigator","createBottomTabNavigator","HomeTopTabsNav","Ionicons","WalletScreen","Stack","Tab","NavWallet","userdata","headerShown","NavShop","console","log","HomeScreenNav","route","data","params","tabBarIcon","color","size","styles","StyleSheet","create"],"mappings":"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","sourcesContent":["// import { StatusBar } from 'expo-status-bar';\r\nimport 'react-native-gesture-handler';\r\nimport * as React from 'react';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport HomeTopTabsNav from '../components/HomeTopTabsNav';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport WalletScreen from '../screen/WalletScreen';\r\nimport { StyleSheet } from 'react-native';\r\n\r\n\r\n\r\n//home screen is the js of routing after login ......................\r\n//it has -shop and Wallet tabs\r\n//hometotabnav is also navigation \r\n\r\nconst Stack = createStackNavigator();\r\nconst Tab = createBottomTabNavigator();\r\n\r\nfunction NavWallet({ userdata }) {\r\n    return (\r\n        <Stack.Navigator screenOptions={{\r\n            headerShown: false\r\n        }}>\r\n            <Stack.Screen\r\n                name=\"WalletScreen\"\r\n                children={() => <WalletScreen userdata={userdata} />}\r\n            //  component={WalletScreen}\r\n            />\r\n        </Stack.Navigator>\r\n    )\r\n}\r\nfunction NavShop({ userdata }) {\r\n    console.log(\"i am navshop\", userdata)\r\n    return (\r\n        <>\r\n            <HomeTopTabsNav userdata={userdata} />\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nfunction HomeScreenNav({ route }) {\r\n    //param here props from welcomeScreen -homescreennav- to down -Dwallet Tab navigater - component function NavWallet\r\n    //do not erase the upper text \r\n    const data = route.params?.data;\r\n\r\n    return (\r\n        <Tab.Navigator  >\r\n\r\n            <Tab.Screen\r\n                name=\"ShopStore\"\r\n                children={() => <NavShop userdata={data} />}\r\n                // component={NavShop}\r\n                options={{\r\n                    tabBarIcon: ({ color, size }) => (\r\n                        <Ionicons name=\"ios-home\" color={color} size={size} />\r\n                    )\r\n                }}\r\n            />\r\n\r\n            <Tab.Screen\r\n                name=\"DWallet\"\r\n                children={() => <NavWallet userdata={data} />}\r\n                // component={NavWallet}\r\n                options={{\r\n                    tabBarIcon: ({ color, size }) => (\r\n                        <Ionicons name=\"ios-wallet\" size={size} color={color} />\r\n\r\n                    )\r\n                }} />\r\n        </Tab.Navigator>\r\n    );\r\n}\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n})\r\n\r\nexport default HomeScreenNav;\r\n\r\n\r\n\r\n//$$$$$$$$this is to render the params sent by parent component \r\n// const userprops = () => {\r\n    //     React.useEffect(() => {\r\n    //         if (route.params?.data) {\r\n    //             // Post updated, do something with `route.params.post`\r\n    //             // For example, send the post to the server\r\n    //             const data = () => { return route.params.data }\r\n\r\n    //         }\r\n    //     }, [route.params?.data]);\r\n    // }\r\n    // userprops.data()\r\n"]},"metadata":{},"sourceType":"module"}